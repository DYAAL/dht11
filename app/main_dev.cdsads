#include <linux/device.h>
#include <linux/err.h>
#include <linux/init.h>
#include <linux/module.h>
#include <linux/platform_device.h>

// 定义第一个设备的资源
struct resource my_resources1[] = {
    {
        .flags = IORESOURCE_MEM,
        .name = "my_mem_resource1",
    },
    {
        .flags = IORESOURCE_IRQ,
        .name = "my_irq_resource1",
    },
};

// 定义第二个设备的资源
struct resource my_resources2[] = {
    {
        .flags = IORESOURCE_MEM,
        .name = "my_mem_resource2",
    },
    {
        .flags = IORESOURCE_IRQ,
        .name = "my_irq_resource2",
    },
};

// 释放函数
void my_release_func(struct device* dev)
{
    printk(KERN_INFO "Releasing device: %s\n", dev_name(dev));
}

// 定义第一个 platform device
static struct platform_device pdev1 = {
    .name = "platform_device_v1",
    .id = -1,
    .dev = {
        .release = my_release_func,
        .init_name = "platform_v1",
    },
    .num_resources = ARRAY_SIZE(my_resources1),
    .resource = my_resources1,
};

// 定义第二个 platform device
static struct platform_device pdev2 = {
    .name = "platform_device_v2",
    .id = -1,
    .dev = {
        .release = my_release_func,
        .init_name = "platform_v2",
    },
    .num_resources = ARRAY_SIZE(my_resources2),
    .resource = my_resources2,
};

// 模块初始化函数
static int __init my_dev_init(void)
{
    int ret;

    // 注册第一个设备
    ret = platform_device_register(&pdev1);
    if (ret) {
        printk(KERN_ERR "platform_device_register pdev1 failed with %d\n", ret);
        return ret;
    }

    // 注册第二个设备
    ret = platform_device_register(&pdev2);
    if (ret) {
        printk(KERN_ERR "platform_device_register pdev2 failed with %d\n", ret);
        platform_device_unregister(&pdev1);
        return ret;
    }

    return 0;
}

// 模块退出函数
static void __exit my_dev_exit(void)
{
    platform_device_unregister(&pdev2);
    platform_device_unregister(&pdev1);
}

module_init(my_dev_init);
module_exit(my_dev_exit);

MODULE_LICENSE("GPL");
MODULE_AUTHOR("Your Name");
MODULE_DESCRIPTION("Example of registering multiple platform devices");
